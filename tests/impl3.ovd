// __ovid_compiler_test
//__mode: run
//__end_header

impl i32 {
    fn abs(self) -> i32 {
        if self < id:<i32>(0) {
            return -self
        } else {
            return self
        }
    }

    fn id<T>(t T) -> T {
        return t
    }

    fn inc(*mut self) {
        *self += id:<i32>(1)
    }
}

pub fn main() -> i32 {
    mut a = -6
    [i32]:inc(&a)
    val b = [i32]:abs(a)
    return b - 5
}
