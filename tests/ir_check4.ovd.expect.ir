(5:1)	ovidc_test:test1 = FUNCTIONDECLARE (a i32) -> void {
    (5:12)	a = ALLOCATION i32
}
(7:1)	ovidc_test:test2 = FUNCTIONDECLARE () -> u16 {
}
(9:1)	ovidc_test:test3 = FUNCTIONDECLARE (v *mut i16) -> void {
    (9:12)	v = ALLOCATION *mut i16
    (10:13)	%0 = INTLITERAL i64 54
    (10:5)	a = ALLOCATION i64
    (10:5)	STORE a <- %0
    (10:5)	%1 = BUILTINCAST i32 a
    (11:5)	%2 = FUNCTIONCALL void ovidc_test:test1(%1)
    (12:11)	%3 = FUNCTIONCALL u16 ovidc_test:test2()
    (12:11)	%4 = BUILTINCAST i32 %3
    (12:5)	%5 = FUNCTIONCALL void ovidc_test:test1(%4)
    (13:5)	%6 = DEREFERENCE i16 v
    (13:10)	%7 = FUNCTIONCALL u16 ovidc_test:test2()
    (13:10)	%8 = BUILTINCAST i16 %7
    (13:5)	STORE %6 <- %8
}
