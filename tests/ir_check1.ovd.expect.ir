(8:17)	%0 = INTLITERAL i32 10
(8:5)	%1{ovidc_test:mod:a} = GLOBALALLOCATION i32 %0
(10:1)	%6{ovidc_test:mod:test} = FUNCTIONDECLARE (b i32) -> i32 {
    (10:1)	BASICBLOCK @2 {
        (10:11)	%3{b} = ALLOCATION i32
        (11:9)	%4 = INTLITERAL i32 2
        (11:5)	STORE %1{ovidc_test:mod:a} <- %4
        (12:5)	%5{c} = ALLOCATION i32
        (12:5)	STORE %5{c} <- %3{b}
    }
}
(15:1)	%24{ovidc_test:mod:cond_test} = FUNCTIONDECLARE (cond bool) -> void {
    (15:1)	BASICBLOCK @7 {
        (15:19)	%8{cond} = ALLOCATION bool
        (16:8)	CONDITIONALJUMP %8{cond} @10(true) @11(false)
    }
    (16:8)	BASICBLOCK @10 {
        (17:18)	%12 = INTLITERAL i32 1
        (17:9)	%13{v1} = ALLOCATION i32
        (17:9)	STORE %13{v1} <- %12
        (16:8)	JUMP @9
    }
    (16:8)	BASICBLOCK @11 {
        (18:13)	%14 = BOOLLITERAL bool true
        (18:13)	CONDITIONALJUMP %14 @15(true) @16(false)
    }
    (18:13)	BASICBLOCK @15 {
        (19:18)	%17 = INTLITERAL i32 2
        (19:9)	%18{v2} = ALLOCATION i32
        (19:9)	STORE %18{v2} <- %17
        (18:13)	JUMP @9
    }
    (18:13)	BASICBLOCK @16 {
        (20:12)	%19 = BOOLLITERAL bool true
        (20:12)	CONDITIONALJUMP %19 @20(true) @9(false)
    }
    (20:12)	BASICBLOCK @20 {
        (21:18)	%21 = INTLITERAL i32 3
        (21:9)	%22{v3} = ALLOCATION i32
        (21:9)	STORE %22{v3} <- %21
        (20:12)	JUMP @9
    }
    (16:5)	BASICBLOCK @9 {
        (23:9)	%23 = INTLITERAL i32 6
        (23:5)	STORE %1{ovidc_test:mod:a} <- %23
    }
}
