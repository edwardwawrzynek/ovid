// __ovid_compiler_test
//__mode: run
//__end_header

struct Node<T, U> {
    field1  T
    field2  U
}

impl<A, B> Node<A, B> {
    fn f1(*self) -> A {
        return self.field1
    }

    fn f2(*self) -> B {
        return self.field2
    }

    fn f(*self) -> (A, B) {
        return (f1(self), f2(self))
    }

}

pub fn main() -> i32 {
    val n = Node<i32, bool> { field1: 5, field2: false }
    val f = [Node<i32, bool>]:f(&n)
    if f.1 {
        return 255
    } else {
        return f.0 - 5
    }
}

