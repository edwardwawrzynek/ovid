(8:13)	%0 = INTLITERAL i64 10
(8:5)	ovidc_test:mod:a = ALLOCATION i64
(8:5)	STORE ovidc_test:mod:a <- %0
(10:1)	ovidc_test:mod:test = FUNCTIONDECLARE (b i32) -> i32 {
    (10:11)	b = ALLOCATION i32
    (11:9)	%1 = INTLITERAL i64 2
    (11:5)	STORE ovidc_test:mod:a <- %1
    (12:5)	c = ALLOCATION i32
    (12:5)	STORE c <- b
}
(15:1)	ovidc_test:mod:cond_test = FUNCTIONDECLARE (cond bool) -> void {
    (15:19)	cond = ALLOCATION bool
    (16:8)	CONDITIONALJUMP cond @3(true) @4(false)
    (16:8)	LABEL @3
    (17:18)	%5 = INTLITERAL i64 1
    (17:9)	v1 = ALLOCATION i64
    (17:9)	STORE v1 <- %5
    (16:8)	JUMP @2
    (16:8)	LABEL @4
    (18:13)	%6 = BOOLLITERAL bool true
    (18:13)	CONDITIONALJUMP %6 @7(true) @8(false)
    (18:13)	LABEL @7
    (19:18)	%9 = INTLITERAL i64 2
    (19:9)	v2 = ALLOCATION i64
    (19:9)	STORE v2 <- %9
    (18:13)	JUMP @2
    (18:13)	LABEL @8
    (20:12)	%10 = BOOLLITERAL bool true
    (20:12)	CONDITIONALJUMP %10 @11(true) @12(false)
    (20:12)	LABEL @11
    (21:18)	%13 = INTLITERAL i64 3
    (21:9)	v3 = ALLOCATION i64
    (21:9)	STORE v3 <- %13
    (20:12)	JUMP @2
    (20:12)	LABEL @12
    (16:5)	LABEL @2
}
