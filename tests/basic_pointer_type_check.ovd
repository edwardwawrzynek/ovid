// __ovid_compiler_test
//__mode: type_check
//__end_header

module mod

pub mut value i32 = 10
pub val valueImut i32 = 9

fn test1(a *i64, b *mut i64) -> void {
    *a = 1 // __error: "left side of assignment is non mutable"
    *b = 1

    *&*a = 1 // __error: "left side of assignment is non mutable"
    *&*b = 1

    **&a = 1 // __error: "left side of assignment is non mutable"
    **&b = 1

    &**a // __error: "cannot dereference non pointer type i64"
    &**b // __error: "cannot dereference non pointer type i64"
}

fn test2() -> void {
    value = 11

    val addr1 = &value
    val addr2 = &value

    val addr1Imut = &valueImut

    mut addr3 = &addr1
    addr3 = &addr2

    addr3 = &addr1Imut // __error: "type of expression **i32 does not match expected type **mut i32"

    addr3 = &value // __error: "type of expression *mut i32 does not match expected type **mut i32"

    addr1 = &value // __error: "left side of assignment is non mutable"

    val addr4 = *addr3
    val value2 = *addr4
    value2 = 10 // __error: "left side of assignment is non mutable"

    mut value3 = **addr3
    value3 = 11

    val value4 = ***addr3 // __error: "cannot dereference non pointer type i32"
    val value5 = ****addr4 // __error: "cannot dereference non pointer type i32"

    val value6 = *value // __error: "cannot dereference non pointer type i32"
}