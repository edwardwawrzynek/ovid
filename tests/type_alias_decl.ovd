// __ovid_compiler_test
//__mode: compile
//__end_header

module test
module i32 {
    type type1 = i32
}

type test1 = i32:type1
type test2 = ::test:i32:type1
type test3 = ::i32:type1 // __error: "use of undeclared type `i32:type1`"
type test4 = type1 // __error: "use of undeclared type `type1`"

type test5 = randomtype // __error: "use of undeclared type `randomtype`"

pub type test = i32 // __error: "pub type cannot be declared inside a non-pub module"

type int = i32
type intptr = *mut i32
type uintptr = *mut u32
type intptrptr = *intptr

module sub {
    type newtype = i32
}

fn test(a intptrptr) -> intptr {
   *a
}

fn test1(a test:intptrptr) -> *::test:intptr {
    *a
}

fn test2(a sub:newtype) -> ::test:sub:newtype {
    a
}

fn test3(a newtype) -> test:sub:newtype { // __error: "use of undeclared type `newtype`"
    a
}

fn test4(a sometype) -> randomtype { // __error: "use of undeclared type `sometype`" "use of undeclared type `randomtype`"
    a
}
